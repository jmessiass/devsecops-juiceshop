name: Security Scan

on:
  push:

jobs:
  run_sast:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep

    steps:
      - name: clone application source code
        uses: actions/checkout@v3

      - name: run semgrep
        run: |
          semgrep \
            --sarif --output semgrep.sarif \
            --metrics=off \
            --config="p/default"

      - name: save report as pipeline artifact
        uses: actions/upload-artifact@v3
        with:
          name: semgrep.sarif
          path: semgrep.sarif

  run_sca:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install
          npm install --package-lock

      - name: Run dependency check (SCA)
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'juice-shop'
          path: '.'
          format: 'JSON'
          out: 'depcheck'
          args: >
            --failOnCVSS 7
            --enableRetired
            --disableArchive --exclude **/*.zip

      - name: Upload Depcheck report
        uses: actions/upload-artifact@v3
        with:
          name: Depcheck report
          path: ${{github.workspace}}/depcheck

  run_dast:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Docker
        uses: docker/setup-buildx-action@v1

      - name: Start Juice Shop
        run: |
          docker run -d --rm \
          --name juice-shop \
          -p 3000:3000 \
          bkimminich/juice-shop

      - name: OWASP ZAP Full Scan (DAST)
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: 'http://127.0.0.1:3000'

  run_secrets_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run_iac_scan:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: 'trivy-results.sarif'
