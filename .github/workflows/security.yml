name: Security Scan
permissions:
  contents: write
  security-events: write

on:
  push:

jobs:
  run_sast:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep

    steps:
      - name: clone application source code
        uses: actions/checkout@v3

      - name: run semgrep
        run: |
          semgrep --config="p/default" --json --output=semgrep-report.json

      - name: save report as pipeline artifact
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-report
          path: semgrep-report.json

  run_sca:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install
          npm install --package-lock

      - name: Run dependency check (SCA)
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'juice-shop'
          path: '.'
          format: 'JSON'
          out: 'dependency-check-report.json'
          args: >
            --failOnCVSS 11
            --enableRetired
            --disableArchive --exclude **/*.zip

      - name: Upload Depcheck report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: dependency-check-report.json

  run_dast:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Docker
        uses: docker/setup-buildx-action@v1

      - name: Start Juice Shop
        run: |
          docker run -d --rm \
          --name juice-shop \
          -p 3000:3000 \
          bkimminich/juice-shop

      - name: OWASP ZAP Full Scan (DAST)
        id: zap_scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: 'http://127.0.0.1:3000'
          format: 'json'
          output: 'zap-report.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ZAP Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ZAP Report
          path: zap-report.json

  run_secrets_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install TruffleHog
        run: |
          pip install trufflehog

      - name: Run TruffleHog
        run: |
          trufflehog filesystem --json --directory . > trufflehog-report.json

      - name: Upload TruffleHog JSON report
        uses: actions/upload-artifact@v3
        with:
          name: trufflehog-report
          path: trufflehog-report.json

  run_iac_scan:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'json'
          output: 'trivy-results.json'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: 'trivy-results.json'
